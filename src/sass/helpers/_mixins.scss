@import "functions";

@mixin sizeSquare($size) {
  width: $size;
  height: $size;
}
@mixin color($color) {
  color: $color;
}

@mixin font-smoothing($value: on) {
  @if $value == on {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  } @else {
    -webkit-font-smoothing: subpixel-antialiased;
    -moz-osx-font-smoothing: auto;
  }
}

/* ************ MIXINS ************ */

//Adds font-size in rem & px
//Value passed should be the expected px size
//Default value 12 - can be customized to fit project
@mixin font-size($sizeValue: 16) {
  font-size: $sizeValue + px; //fallback for old browsers
  $fontVal: (0.0625 * $sizeValue);

  font-size: (0.0625 * $sizeValue) + rem;
  letter-spacing: (0.12 * $fontVal) + rem;
  line-height: (1.5 * $fontVal) + rem;
  word-spacing: (0.16 * $fontVal) + rem;
}

//Adds line-height in rem & px
//Value passed should be the expected px size
//Default value 20 - can be customized to fit project
@mixin line-height($heightValue: 20) {
  line-height: $heightValue + px; //fallback for old browsers
  line-height: (0.0625 * $heightValue) + rem;
}

//Rhythm adds font-size and line-height in rem with a px fallback
//Value passed should be the expected px size
//Default values 12, 20 - can be customized to fit project
@mixin rhythm($sizeValue: 12, $heightValue: 20) {
  @include font-size($sizeValue);
  @include line-height($heightValue);
}

//Mixin for padding

@mixin padding-top($padding) {
  padding-top: $padding + px;
  padding-top: $padding * 0.0625 + rem;
}
@mixin padding-right($padding) {
  padding-right: $padding + px;
  padding-right: $padding * 0.0625 + rem;
}
@mixin padding-bottom($padding) {
  padding-bottom: $padding + px;
  padding-bottom: $padding * 0.0625 + rem;
}
@mixin padding-left($padding) {
  padding-left: $padding + px;
  padding-left: $padding * 0.0625 + rem;
}
@mixin padding-all($padding) {
  @include padding-top($padding);
  @include padding-right($padding);
  @include padding-bottom($padding);
  @include padding-left($padding);
}
//Mixin for margin

@mixin margin-top($margin) {
  margin-top: $margin + px;
  margin-top: $margin * 0.0625 + rem;
}
@mixin margin-right($margin) {
  margin-right: $margin + px;
  margin-right: $margin * 0.0625 + rem;
}
@mixin margin-bottom($margin) {
  margin-bottom: $margin + px;
  margin-bottom: $margin * 0.0625 + rem;
}
@mixin margin-left($margin) {
  margin-left: $margin + px;
  margin-left: $margin * 0.0625 + rem;
}
